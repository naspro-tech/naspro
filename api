const express = require('express');
const router = express.Router();
const fetch = require('node-fetch');
const xml2js = require('xml2js');

router.post('/pay', async (req, res) => {
  try {
    const {
      name,
      email,
      phone,
      service,
      amount,
      description,
      orderId
    } = req.body;

    // Build SOAP XML request
    const soapRequest = `
    <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:dto="http://dto.transaction.partner.pg.systems.com/" xmlns:dto1="http://dto.common.pg.systems.com/">
      <soapenv:Header/>
      <soapenv:Body>
        <dto:initiateTransactionRequestType>
          <dto1:username>YourEasyPaisaUsername</dto1:username>
          <dto1:password>YourEasyPaisaPasswordHash</dto1:password>
          <channel>Internet</channel>
          <orderId>${orderId}</orderId>
          <storeId>YourStoreID</storeId>
          <transactionAmount>${amount}</transactionAmount>
          <transactionType>MA</transactionType>
          <mobileAccountNo>${phone}</mobileAccountNo>
          <msisdn>${phone}</msisdn>
          <emailAddress>${email}</emailAddress>
        </dto:initiateTransactionRequestType>
      </soapenv:Body>
    </soapenv:Envelope>`;

    // Send SOAP request to Easypaisa
    const response = await fetch('https://easypay.easypaisa.com.pk:443/easypay-service/PartnerBusinessService', {
      method: 'POST',
      headers: {
        'Content-Type': 'text/xml;charset=UTF-8',
        'SOAPAction': ''
      },
      body: soapRequest
    });

    const responseText = await response.text();

    // Parse XML response
    xml2js.parseString(responseText, { explicitArray: false }, (err, result) => {
      if (err) {
        console.error('XML Parse Error:', err);
        return res.status(500).json({ error: 'Failed to parse Easypaisa response' });
      }

      const paymentUrl = result['soapenv:Envelope']?.['soapenv:Body']?.['dto:initiateTransactionResponseType']?.paymentURL;

      if (!paymentUrl) {
        return res.status(400).json({ error: 'Payment URL not found in Easypaisa response' });
      }

      // Send payment URL to frontend
      res.json({ paymentUrl });
    });

  } catch (error) {
    console.error('Error in /api/pay:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
});

module.exports = router;
